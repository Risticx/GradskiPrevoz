// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebProjekat.Migrations
{
    [DbContext(typeof(ProjekatContext))]
    [Migration("20220107181336_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Autobus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Kilometraza")
                        .HasColumnType("int");

                    b.Property<int>("RadnikId")
                        .HasColumnType("int");

                    b.Property<string>("RegistarskaOznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RadnikId")
                        .IsUnique();

                    b.ToTable("Autobusi");
                });

            modelBuilder.Entity("Models.AutobusLinija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AutobusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DanVoznje")
                        .HasColumnType("date");

                    b.Property<int?>("LinijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutobusID");

                    b.HasIndex("LinijaID");

                    b.ToTable("AutobusiLinija");
                });

            modelBuilder.Entity("Models.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojKarte")
                        .HasColumnType("int");

                    b.Property<int>("CenaKarte")
                        .HasColumnType("int");

                    b.Property<int?>("RadnikID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremeIzdavanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("RadnikID");

                    b.ToTable("Karte");
                });

            modelBuilder.Entity("Models.Linija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojLinije")
                        .HasColumnType("int");

                    b.Property<int>("DuzinaLinije")
                        .HasColumnType("int");

                    b.Property<string>("NazivLinije")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VremeObilaska")
                        .HasColumnType("int");

                    b.Property<int?>("ZonaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZonaID");

                    b.ToTable("Linjia");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MatBr")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RadnoMesto")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Models.Zona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojZone")
                        .HasColumnType("int");

                    b.Property<int>("CenaKarte")
                        .HasColumnType("int");

                    b.Property<string>("NazivZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("Models.Autobus", b =>
                {
                    b.HasOne("Models.Radnik", "Radnik")
                        .WithOne("Autobus")
                        .HasForeignKey("Models.Autobus", "RadnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Radnik");
                });

            modelBuilder.Entity("Models.AutobusLinija", b =>
                {
                    b.HasOne("Models.Autobus", "Autobus")
                        .WithMany("AutobusLinija")
                        .HasForeignKey("AutobusID");

                    b.HasOne("Models.Linija", "Linija")
                        .WithMany("LinijaAutobus")
                        .HasForeignKey("LinijaID");

                    b.Navigation("Autobus");

                    b.Navigation("Linija");
                });

            modelBuilder.Entity("Models.Karta", b =>
                {
                    b.HasOne("Models.Radnik", "Radnik")
                        .WithMany("Karte")
                        .HasForeignKey("RadnikID");

                    b.Navigation("Radnik");
                });

            modelBuilder.Entity("Models.Linija", b =>
                {
                    b.HasOne("Models.Zona", "Zona")
                        .WithMany("Linije")
                        .HasForeignKey("ZonaID");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Models.Autobus", b =>
                {
                    b.Navigation("AutobusLinija");
                });

            modelBuilder.Entity("Models.Linija", b =>
                {
                    b.Navigation("LinijaAutobus");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Navigation("Autobus");

                    b.Navigation("Karte");
                });

            modelBuilder.Entity("Models.Zona", b =>
                {
                    b.Navigation("Linije");
                });
#pragma warning restore 612, 618
        }
    }
}
